// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot test 1`] = `
Object {
  "Outputs": Object {
    "TestStackLabs1WebhookApiGatewayEndpoint8DA36E91": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "TestStackLabs1WebhookApiGatewayA6F58624",
            },
            ".execute-api.eu-north-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "TestStackLabs1WebhookApiGatewayDeploymentStageprodE39B5FA3",
            },
            "/",
          ],
        ],
      },
    },
    "TestStackLabs2WebhookApiGatewayEndpointB19A44B4": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "TestStackLabs2WebhookApiGatewayC409B712",
            },
            ".execute-api.eu-north-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "TestStackLabs2WebhookApiGatewayDeploymentStageprodC4B84E28",
            },
            "/",
          ],
        ],
      },
    },
    "WebhookEndpointLabs1": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "TestStackLabs1WebhookApiGatewayA6F58624",
            },
            ".execute-api.eu-north-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "TestStackLabs1WebhookApiGatewayDeploymentStageprodE39B5FA3",
            },
            "/webhook",
          ],
        ],
      },
    },
    "WebhookEndpointLabs2": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "TestStackLabs2WebhookApiGatewayC409B712",
            },
            ".execute-api.eu-north-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "TestStackLabs2WebhookApiGatewayDeploymentStageprodC4B84E28",
            },
            "/webhook",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "Ami": Object {
      "Properties": Object {
        "ImageRecipeArn": Object {
          "Fn::GetAtt": Array [
            "Recipe",
            "Arn",
          ],
        },
        "InfrastructureConfigurationArn": Object {
          "Fn::GetAtt": Array [
            "AmiInfraConfig",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ImageBuilder::Image",
    },
    "AmiInfraConfig": Object {
      "DependsOn": Array [
        "AmiInstanceProfile",
      ],
      "Properties": Object {
        "InstanceProfileName": "TestStack",
        "Name": "TestStack",
      },
      "Type": "AWS::ImageBuilder::InfrastructureConfiguration",
    },
    "AmiInstanceProfile": Object {
      "Properties": Object {
        "InstanceProfileName": "TestStack",
        "Path": "/executionServiceEC2Role/",
        "Roles": Array [
          Object {
            "Ref": "InstanceProfileRole5BFF5D1E",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "GithubActionsRunnerComponent": Object {
      "Properties": Object {
        "Data": "name: InstallRunner
description: Install Github Actions runner
schemaVersion: 1.0
parameters:
  - RunnerVersion:
      type: string
      default: '2.286.0'
      description: Github Actions Runner version
phases:
  - name: build
    steps:
      - name: InstallRunner
        action: ExecuteBash
        inputs:
          commands:
            - sudo apt-get update -y
            - sudo apt-get install -y curl jq awscli
            - cd /home/ubuntu
            - sudo -u ubuntu curl -sSLO https://github.com/actions/runner/releases/download/v{{ RunnerVersion }}/actions-runner-linux-x64-{{ RunnerVersion }}.tar.gz
            - sudo -u ubuntu tar -zxvf actions-runner-linux-x64-{{ RunnerVersion }}.tar.gz
            - sudo -u ubuntu rm -f actions-runner-linux-x64-{{ RunnerVersion }}.tar.gz
            - sudo ./bin/installdependencies.sh",
        "Name": "TestStack",
        "Platform": "Linux",
        "Version": "1.0.2",
      },
      "Type": "AWS::ImageBuilder::Component",
    },
    "InstanceProfileRole5BFF5D1E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/EC2InstanceProfileForImageBuilder",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LaunchGithubActionsRunnerLabs1A1A87F73": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:RunInstances",
                "ec2:CreateTags",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Condition": Object {
                "StringLike": Object {
                  "iam:PassedToService": "ec2.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ssm:getParameters",
              "Effect": "Allow",
              "Resource": "arn:aws:ssm:eu-north-1:abc-123:parameter/github/webhook/secret",
            },
            Object {
              "Action": "iam:PassRole",
              "Condition": Object {
                "StringLike": Object {
                  "iam:PassedToService": "ssm.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LaunchGithubActionsRunnerLabs1A1A87F73",
        "Roles": Array [
          Object {
            "Ref": "WebhookLambdaLabs1ServiceRole14ECDFC0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LaunchGithubActionsRunnerLabs242D43EB6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2:RunInstances",
                "ec2:CreateTags",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Condition": Object {
                "StringLike": Object {
                  "iam:PassedToService": "ec2.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "ssm:getParameters",
              "Effect": "Allow",
              "Resource": "arn:aws:ssm:eu-north-1:abc-123:parameter/github/webhook/another-secret",
            },
            Object {
              "Action": "iam:PassRole",
              "Condition": Object {
                "StringLike": Object {
                  "iam:PassedToService": "ssm.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LaunchGithubActionsRunnerLabs242D43EB6",
        "Roles": Array [
          Object {
            "Ref": "WebhookLambdaLabs2ServiceRoleCA8B2454",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LaunchTemplateLabs1C57C2498": Object {
      "Properties": Object {
        "LaunchTemplateData": Object {
          "IamInstanceProfile": Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "LaunchTemplateLabs1Profile3E9FBD5E",
                "Arn",
              ],
            },
          },
          "ImageId": Object {
            "Fn::GetAtt": Array [
              "Ami",
              "ImageId",
            ],
          },
          "InstanceInitiatedShutdownBehavior": "terminate",
          "InstanceType": "t3.micro",
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SecurityGroupDD263621",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": Array [
            Object {
              "ResourceType": "instance",
              "Tags": Array [
                Object {
                  "Key": "Name",
                  "Value": "Default/TestStack/LaunchTemplate--Labs1",
                },
              ],
            },
            Object {
              "ResourceType": "volume",
              "Tags": Array [
                Object {
                  "Key": "Name",
                  "Value": "Default/TestStack/LaunchTemplate--Labs1",
                },
              ],
            },
          ],
          "UserData": Object {
            "Fn::Base64": "#!/bin/bash

AWS_REGION=eu-north-1
AWS_INSTANCE_TYPE=$(curl http://169.254.169.254/latest/meta-data/instance-type)
GH_TOKEN_SSM_PATH=/github/actions/token
RUNNER_SCOPE=spt-mediaplatform-labs
RUNNER_TIMEOUT=10m
RUNNER_GROUP=default

RUNNER_WORKDIR=_work

cd /home/ubuntu

deregister_runner() {
  echo \\"Exit signal caught, deregistering runner...\\"
  sudo -u ubuntu ./config.sh remove --unattended --token \\"\${RUNNER_TOKEN}\\"
}

init() {
  GITHUB_TOKEN=$(aws ssm get-parameters --name \${GH_TOKEN_SSM_PATH} --region \${AWS_REGION} --with-decryption | jq -r .Parameters[0].Value)
  AUTH_HEADER=\\"Authorization: token \${GITHUB_TOKEN}\\"
  ORG=$(cut -d/ -f1 <<< \${RUNNER_SCOPE})
  REPO=$(cut -d/ -f2 <<< \${RUNNER_SCOPE})

  if [[ -z \\"\${REPOSITORY}\\" ]]; then
    TOKEN_REGISTRATION_URL=\\"https://github.schibsted.io/api/v3/orgs/\${ORG}/actions/runners/registration-token\\"
  else
    TOKEN_REGISTRATION_URL=\\"https://github.schibsted.io/api/v3/repos/\${ORG}/\${REPO}/actions/runners/registration-token\\"
  fi

  RUNNER_TOKEN=\\"$(sudo -u ubuntu curl -XPOST -fsSL \\\\
    -H \\"Accept: application/vnd.github.v3+json\\" \\\\
    -H \\"\${AUTH_HEADER}\\" \\\\
    \\"\${TOKEN_REGISTRATION_URL}\\" \\\\
    | jq -r '.token')\\"
}

configure() {
  sudo -u ubuntu ./config.sh --url \\"https://github.schibsted.io/\${RUNNER_SCOPE}\\" \\\\
    --token \\"\${RUNNER_TOKEN}\\" \\\\
    --labels \\"vm:\${AWS_INSTANCE_TYPE}\\" \\\\
    --work \\"\${RUNNER_WORKDIR}\\" \\\\
    --runnergroup \\"\${RUNNER_GROUP}\\" \\\\
    --unattended \\\\
    --ephemeral
}

run() {
  trap deregister_runner SIGINT SIGQUIT SIGTERM INT QUIT TERM
  sudo -u ubuntu timeout --signal=15 \\"\${RUNNER_TIMEOUT}\\" ./run.sh & wait $! && return
  deregister_runner
}

echo \\"Init...\\"
init

echo \\"Configuring...\\"
configure

echo \\"Running...\\"
run

echo \\"Shutting down...\\"
sudo shutdown -h now",
          },
        },
        "LaunchTemplateName": "TestStack/Labs1",
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "LaunchTemplateLabs1Profile3E9FBD5E": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "RunnerRoleLabs1E076ED91",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "LaunchTemplateLabs28C6D0996": Object {
      "Properties": Object {
        "LaunchTemplateData": Object {
          "IamInstanceProfile": Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "LaunchTemplateLabs2Profile7589BE97",
                "Arn",
              ],
            },
          },
          "ImageId": Object {
            "Fn::GetAtt": Array [
              "Ami",
              "ImageId",
            ],
          },
          "InstanceInitiatedShutdownBehavior": "terminate",
          "InstanceType": "t3.micro",
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "SecurityGroupDD263621",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": Array [
            Object {
              "ResourceType": "instance",
              "Tags": Array [
                Object {
                  "Key": "Name",
                  "Value": "Default/TestStack/LaunchTemplate--Labs2",
                },
              ],
            },
            Object {
              "ResourceType": "volume",
              "Tags": Array [
                Object {
                  "Key": "Name",
                  "Value": "Default/TestStack/LaunchTemplate--Labs2",
                },
              ],
            },
          ],
          "UserData": Object {
            "Fn::Base64": "#!/bin/bash

AWS_REGION=eu-north-1
AWS_INSTANCE_TYPE=$(curl http://169.254.169.254/latest/meta-data/instance-type)
GH_TOKEN_SSM_PATH=/github/actions/token
RUNNER_SCOPE=spt-mediaplatform-another-labs
RUNNER_TIMEOUT=30m
RUNNER_GROUP=default

RUNNER_WORKDIR=_work

cd /home/ubuntu

deregister_runner() {
  echo \\"Exit signal caught, deregistering runner...\\"
  sudo -u ubuntu ./config.sh remove --unattended --token \\"\${RUNNER_TOKEN}\\"
}

init() {
  GITHUB_TOKEN=$(aws ssm get-parameters --name \${GH_TOKEN_SSM_PATH} --region \${AWS_REGION} --with-decryption | jq -r .Parameters[0].Value)
  AUTH_HEADER=\\"Authorization: token \${GITHUB_TOKEN}\\"
  ORG=$(cut -d/ -f1 <<< \${RUNNER_SCOPE})
  REPO=$(cut -d/ -f2 <<< \${RUNNER_SCOPE})

  if [[ -z \\"\${REPOSITORY}\\" ]]; then
    TOKEN_REGISTRATION_URL=\\"https://github.schibsted.io/api/v3/orgs/\${ORG}/actions/runners/registration-token\\"
  else
    TOKEN_REGISTRATION_URL=\\"https://github.schibsted.io/api/v3/repos/\${ORG}/\${REPO}/actions/runners/registration-token\\"
  fi

  RUNNER_TOKEN=\\"$(sudo -u ubuntu curl -XPOST -fsSL \\\\
    -H \\"Accept: application/vnd.github.v3+json\\" \\\\
    -H \\"\${AUTH_HEADER}\\" \\\\
    \\"\${TOKEN_REGISTRATION_URL}\\" \\\\
    | jq -r '.token')\\"
}

configure() {
  sudo -u ubuntu ./config.sh --url \\"https://github.schibsted.io/\${RUNNER_SCOPE}\\" \\\\
    --token \\"\${RUNNER_TOKEN}\\" \\\\
    --labels \\"vm:\${AWS_INSTANCE_TYPE}\\" \\\\
    --work \\"\${RUNNER_WORKDIR}\\" \\\\
    --runnergroup \\"\${RUNNER_GROUP}\\" \\\\
    --unattended \\\\
    --ephemeral
}

run() {
  trap deregister_runner SIGINT SIGQUIT SIGTERM INT QUIT TERM
  sudo -u ubuntu timeout --signal=15 \\"\${RUNNER_TIMEOUT}\\" ./run.sh & wait $! && return
  deregister_runner
}

echo \\"Init...\\"
init

echo \\"Configuring...\\"
configure

echo \\"Running...\\"
run

echo \\"Shutting down...\\"
sudo shutdown -h now",
          },
        },
        "LaunchTemplateName": "TestStack/Labs2",
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "LaunchTemplateLabs2Profile7589BE97": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "RunnerRoleLabs235DB9FD1",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "Recipe": Object {
      "Properties": Object {
        "Components": Array [
          Object {
            "ComponentArn": "arn:aws:imagebuilder:eu-north-1:aws:component/update-linux/1.0.0",
          },
          Object {
            "ComponentArn": "arn:aws:imagebuilder:eu-north-1:aws:component/docker-ce-ubuntu/1.0.0",
          },
          Object {
            "ComponentArn": Object {
              "Fn::GetAtt": Array [
                "GithubActionsRunnerComponent",
                "Arn",
              ],
            },
            "Parameters": Array [
              Object {
                "Name": "RunnerVersion",
                "Value": Array [
                  "2.286.0",
                ],
              },
            ],
          },
        ],
        "Name": "TestStack",
        "ParentImage": "arn:aws:imagebuilder:eu-north-1:aws:image/ubuntu-server-20-lts-x86/x.x.x",
        "Version": "0.0.4",
      },
      "Type": "AWS::ImageBuilder::ImageRecipe",
    },
    "RunnerRoleLabs1E076ED91": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "ssm:*",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "ssm-policy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RunnerRoleLabs235DB9FD1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "ssm:*",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "ssm-policy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SecurityGroupDD263621": Object {
      "Properties": Object {
        "GroupDescription": "Default/TestStack/SecurityGroup",
        "GroupName": "TestStack/Vpc",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TestStackLabs1WebhookApiGatewayA6F58624": Object {
      "Properties": Object {
        "Name": "TestStack/Labs1/WebhookApiGateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "TestStackLabs1WebhookApiGatewayAccount04B11408": Object {
      "DependsOn": Array [
        "TestStackLabs1WebhookApiGatewayA6F58624",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "TestStackLabs1WebhookApiGatewayCloudWatchRole9B570398",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "TestStackLabs1WebhookApiGatewayCloudWatchRole9B570398": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestStackLabs1WebhookApiGatewayDeploymentABD66C6832920a5562573cc22887d47d3981dd6a": Object {
      "DependsOn": Array [
        "TestStackLabs1WebhookApiGatewaywebhookPOSTDE6309D4",
        "TestStackLabs1WebhookApiGatewaywebhook0055C0CF",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "TestStackLabs1WebhookApiGatewayA6F58624",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "TestStackLabs1WebhookApiGatewayDeploymentStageprodE39B5FA3": Object {
      "DependsOn": Array [
        "TestStackLabs1WebhookApiGatewayAccount04B11408",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "TestStackLabs1WebhookApiGatewayDeploymentABD66C6832920a5562573cc22887d47d3981dd6a",
        },
        "RestApiId": Object {
          "Ref": "TestStackLabs1WebhookApiGatewayA6F58624",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "TestStackLabs1WebhookApiGatewaywebhook0055C0CF": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "TestStackLabs1WebhookApiGatewayA6F58624",
            "RootResourceId",
          ],
        },
        "PathPart": "webhook",
        "RestApiId": Object {
          "Ref": "TestStackLabs1WebhookApiGatewayA6F58624",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestStackLabs1WebhookApiGatewaywebhookPOSTApiPermissionTestStackTestStackLabs1WebhookApiGateway9CC2B97FPOSTwebhook82EDC0CE": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "WebhookLambdaLabs11705F660",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-north-1:abc-123:",
              Object {
                "Ref": "TestStackLabs1WebhookApiGatewayA6F58624",
              },
              "/",
              Object {
                "Ref": "TestStackLabs1WebhookApiGatewayDeploymentStageprodE39B5FA3",
              },
              "/POST/webhook",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TestStackLabs1WebhookApiGatewaywebhookPOSTApiPermissionTestTestStackTestStackLabs1WebhookApiGateway9CC2B97FPOSTwebhook4C60FD8B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "WebhookLambdaLabs11705F660",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-north-1:abc-123:",
              Object {
                "Ref": "TestStackLabs1WebhookApiGatewayA6F58624",
              },
              "/test-invoke-stage/POST/webhook",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TestStackLabs1WebhookApiGatewaywebhookPOSTDE6309D4": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-north-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "WebhookLambdaLabs11705F660",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "TestStackLabs1WebhookApiGatewaywebhook0055C0CF",
        },
        "RestApiId": Object {
          "Ref": "TestStackLabs1WebhookApiGatewayA6F58624",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestStackLabs2WebhookApiGatewayAccount57AC1CB3": Object {
      "DependsOn": Array [
        "TestStackLabs2WebhookApiGatewayC409B712",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "TestStackLabs2WebhookApiGatewayCloudWatchRole14443CAF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "TestStackLabs2WebhookApiGatewayC409B712": Object {
      "Properties": Object {
        "Name": "TestStack/Labs2/WebhookApiGateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "TestStackLabs2WebhookApiGatewayCloudWatchRole14443CAF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestStackLabs2WebhookApiGatewayDeploymentE254F9FE10637674fa14a4afe23f79f0cf195571": Object {
      "DependsOn": Array [
        "TestStackLabs2WebhookApiGatewaywebhookPOST9282A8C6",
        "TestStackLabs2WebhookApiGatewaywebhook6F2AC46C",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "TestStackLabs2WebhookApiGatewayC409B712",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "TestStackLabs2WebhookApiGatewayDeploymentStageprodC4B84E28": Object {
      "DependsOn": Array [
        "TestStackLabs2WebhookApiGatewayAccount57AC1CB3",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "TestStackLabs2WebhookApiGatewayDeploymentE254F9FE10637674fa14a4afe23f79f0cf195571",
        },
        "RestApiId": Object {
          "Ref": "TestStackLabs2WebhookApiGatewayC409B712",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "TestStackLabs2WebhookApiGatewaywebhook6F2AC46C": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "TestStackLabs2WebhookApiGatewayC409B712",
            "RootResourceId",
          ],
        },
        "PathPart": "webhook",
        "RestApiId": Object {
          "Ref": "TestStackLabs2WebhookApiGatewayC409B712",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "TestStackLabs2WebhookApiGatewaywebhookPOST9282A8C6": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:eu-north-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "WebhookLambdaLabs2CCA9FEF1",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "TestStackLabs2WebhookApiGatewaywebhook6F2AC46C",
        },
        "RestApiId": Object {
          "Ref": "TestStackLabs2WebhookApiGatewayC409B712",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "TestStackLabs2WebhookApiGatewaywebhookPOSTApiPermissionTestStackTestStackLabs2WebhookApiGateway407AD526POSTwebhookF95829F3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "WebhookLambdaLabs2CCA9FEF1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-north-1:abc-123:",
              Object {
                "Ref": "TestStackLabs2WebhookApiGatewayC409B712",
              },
              "/",
              Object {
                "Ref": "TestStackLabs2WebhookApiGatewayDeploymentStageprodC4B84E28",
              },
              "/POST/webhook",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TestStackLabs2WebhookApiGatewaywebhookPOSTApiPermissionTestTestStackTestStackLabs2WebhookApiGateway407AD526POSTwebhook82F8F8C4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "WebhookLambdaLabs2CCA9FEF1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:eu-north-1:abc-123:",
              Object {
                "Ref": "TestStackLabs2WebhookApiGatewayC409B712",
              },
              "/test-invoke-stage/POST/webhook",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcTestStackSubnetPrivateSubnet1DefaultRoute0D62CC49": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcTestStackSubnetPublicSubnet1NATGateway87C6515D",
        },
        "RouteTableId": Object {
          "Ref": "VpcTestStackSubnetPrivateSubnet1RouteTable95DF4D5A",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcTestStackSubnetPrivateSubnet1RouteTable95DF4D5A": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/TestStack/Vpc/TestStack--Subnet--PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcTestStackSubnetPrivateSubnet1RouteTableAssociation6191BE17": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcTestStackSubnetPrivateSubnet1RouteTable95DF4D5A",
        },
        "SubnetId": Object {
          "Ref": "VpcTestStackSubnetPrivateSubnet1SubnetA3F474CA",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcTestStackSubnetPrivateSubnet1SubnetA3F474CA": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.128.0/17",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "TestStack/Subnet/Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Default/TestStack/Vpc/TestStack--Subnet--PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcTestStackSubnetPublicSubnet1DefaultRoute0178ED9D": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcTestStackSubnetPublicSubnet1RouteTable09DFF1F6",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcTestStackSubnetPublicSubnet1EIP82059DD7": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/TestStack/Vpc/TestStack--Subnet--PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcTestStackSubnetPublicSubnet1NATGateway87C6515D": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcTestStackSubnetPublicSubnet1EIP82059DD7",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcTestStackSubnetPublicSubnet1SubnetDCD4A9BB",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/TestStack/Vpc/TestStack--Subnet--PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcTestStackSubnetPublicSubnet1RouteTable09DFF1F6": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Default/TestStack/Vpc/TestStack--Subnet--PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcTestStackSubnetPublicSubnet1RouteTableAssociationD4A5F9A4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcTestStackSubnetPublicSubnet1RouteTable09DFF1F6",
        },
        "SubnetId": Object {
          "Ref": "VpcTestStackSubnetPublicSubnet1SubnetDCD4A9BB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcTestStackSubnetPublicSubnet1SubnetDCD4A9BB": Object {
      "Properties": Object {
        "AvailabilityZone": "dummy1a",
        "CidrBlock": "10.0.0.0/17",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "TestStack/Subnet/Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Default/TestStack/Vpc/TestStack--Subnet--PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "WebhookLambdaLabs11705F660": Object {
      "DependsOn": Array [
        "WebhookLambdaLabs1ServiceRole14ECDFC0",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-abc-123-eu-north-1",
          "S3Key": "19b87c9b73790c1c7db919d1f04433869850e3d427138109dd743142bc657444.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "scope": "spt-mediaplatform-labs",
            "spot": "true",
            "subnetId": Object {
              "Ref": "VpcTestStackSubnetPrivateSubnet1SubnetA3F474CA",
            },
            "templateId": Object {
              "Ref": "LaunchTemplateLabs1C57C2498",
            },
            "templateVersion": Object {
              "Fn::GetAtt": Array [
                "LaunchTemplateLabs1C57C2498",
                "LatestVersionNumber",
              ],
            },
            "webhookSecretSsmArn": "arn:aws:ssm:eu-north-1:abc-123:parameter/github/webhook/secret",
            "webhookSecretSsmPath": "/github/webhook/secret",
          },
        },
        "Handler": "handler.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "WebhookLambdaLabs1ServiceRole14ECDFC0",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebhookLambdaLabs1ServiceRole14ECDFC0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "WebhookLambdaLabs2CCA9FEF1": Object {
      "DependsOn": Array [
        "WebhookLambdaLabs2ServiceRoleCA8B2454",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-abc-123-eu-north-1",
          "S3Key": "19b87c9b73790c1c7db919d1f04433869850e3d427138109dd743142bc657444.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "scope": "spt-mediaplatform-another-labs",
            "spot": "false",
            "subnetId": Object {
              "Ref": "VpcTestStackSubnetPrivateSubnet1SubnetA3F474CA",
            },
            "templateId": Object {
              "Ref": "LaunchTemplateLabs28C6D0996",
            },
            "templateVersion": Object {
              "Fn::GetAtt": Array [
                "LaunchTemplateLabs28C6D0996",
                "LatestVersionNumber",
              ],
            },
            "webhookSecretSsmArn": "arn:aws:ssm:eu-north-1:abc-123:parameter/github/webhook/another-secret",
            "webhookSecretSsmPath": "/github/webhook/another-secret",
          },
        },
        "Handler": "handler.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "WebhookLambdaLabs2ServiceRoleCA8B2454",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "WebhookLambdaLabs2ServiceRoleCA8B2454": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
